/*
 * Created on 7 Sep 2017 ( Time 17:05:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package com.nmac.payments.services;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.nmac.payments.entities.VehicleAccountC;
import com.nmac.payments.exceptions.VehicleAccountCNotFoundException;
import com.nmac.payments.repository.VehicleAccountCRepository;

@Service
@Transactional(rollbackFor=VehicleAccountCNotFoundException.class)
public class VehicleAccountCService 
{
	private static Logger logger = LoggerFactory.getLogger(VehicleAccountCService.class);
	
	@Autowired
	private VehicleAccountCRepository vehicleaccountcRepository;
		
	/*
	 * READ methods
	 */
	public Page<VehicleAccountC> findAll(int page, int count) {
		
		if (logger.isDebugEnabled())
			logger.debug("VehicleAccountCService -> findAll VehicleAccountCs");
		
		return vehicleaccountcRepository.findAll(new PageRequest(page, count));
	}

	public Iterable<VehicleAccountC> findAll() {
		
		if (logger.isDebugEnabled())
			logger.debug("VehicleAccountCService -> findAll VehicleAccountCs");
		
		return vehicleaccountcRepository.findAll();
	}
/*
	public VehicleAccountC findBySfid(String vehicleaccountc){
		if (logger.isDebugEnabled())
			logger.debug("Retrieving VehicleAccountC with sfid:" + vehicleaccountc);
		
		return vehicleaccountcRepository.findBySfid(vehicleaccountc);
		
	}
*/
	public VehicleAccountC get(int id) {
		if (logger.isDebugEnabled())
			logger.debug("Retrieving VehicleAccountC with id:" + id);
		
		VehicleAccountC elementToGet = vehicleaccountcRepository.findOne(id);
		
		if (elementToGet == null)
			throw new VehicleAccountCNotFoundException(id);
		
		return elementToGet;
	}

	public VehicleAccountC create(VehicleAccountC vehicleaccountc) {

		if (logger.isDebugEnabled())
			logger.debug("VehicleAccountCService -> create:" + vehicleaccountc);
			
		return vehicleaccountcRepository.save(vehicleaccountc);
	}

	public VehicleAccountC update(VehicleAccountC vehicleaccountc) {
		
		if (logger.isDebugEnabled())
			logger.debug("VehicleAccountCService -> create:" + vehicleaccountc);

		VehicleAccountC elementToUpdate = vehicleaccountcRepository.findOne(vehicleaccountc.getId());
		
		if (elementToUpdate == null)
			throw new VehicleAccountCNotFoundException(vehicleaccountc.getName());
		
		elementToUpdate.update(vehicleaccountc);
		vehicleaccountcRepository.save(elementToUpdate);
		
		return elementToUpdate;
	}

	public VehicleAccountC delete(int id) {
		if (logger.isDebugEnabled())
			logger.debug("VehicleAccountCService -> delete:" + id);

		VehicleAccountC elementToDelete = get(id);
		
		if (elementToDelete == null)
			throw new VehicleAccountCNotFoundException(id);
		
		vehicleaccountcRepository.delete(elementToDelete);

		return elementToDelete;
	}

}

