/*
 * Created on 7 Sep 2017 ( Time 17:05:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.nmac.payments.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "vehicle_account__c"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="vehicle_account__c", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="VehicleAccountC.countAll", query="SELECT COUNT(x) FROM VehicleAccountC x" )
} )
public class VehicleAccountC implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    

    @Column(name="account_status__c", length=255)
    private String     accountStatusC ;


    @Transient
    @JsonIgnore
    @Column(name="isdeleted")
    private Boolean    isdeleted    ;


    @Transient
    @JsonIgnore
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp")
    private Date       systemmodstamp ;


    @Column(name="name", length=80)
    private String     name         ;


    @Transient
    @JsonIgnore
    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;


    @Column(name="model__c", length=255)
    private String     modelC       ;


    @Column(name="account_type__c", length=255)
    private String     accountTypeC ;


    @Column(name="sfid", length=18)
    private String     sfid         ;


    @Column(name="assign__c", length=255)
    private String     assignC      ;


    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;


    @Column(name="make__c", length=255)
    private String     makeC        ;


    @Transient
    @JsonIgnore
    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;


    @Temporal(TemporalType.DATE)
    @Column(name="liability_statement_date__c")
    private Date       liabilityStatementDateC ;


    @Column(name="account_number__c", length=17)
    private String     accountNumberC ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public VehicleAccountC()
    {
		super();
    }

    public VehicleAccountC update(VehicleAccountC a) {
		this.id = a.id;
        this.accountStatusC = a.accountStatusC;
        this.isdeleted = a.isdeleted;
        this.systemmodstamp = a.systemmodstamp;
        this.name = a.name;
        this.hcLastop = a.hcLastop;
        this.modelC = a.modelC;
        this.accountTypeC = a.accountTypeC;
        this.sfid = a.sfid;
        this.assignC = a.assignC;
        this.createddate = a.createddate;
        this.makeC = a.makeC;
        this.hcErr = a.hcErr;
        this.liabilityStatementDateC = a.liabilityStatementDateC;
        this.accountNumberC = a.accountNumberC;



		return a;
	}

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : account_status__c ( varchar ) 
    public void setAccountStatusC( String accountStatusC )
    {
        this.accountStatusC = accountStatusC;
    }
    public String getAccountStatusC()
    {
        return this.accountStatusC;
    }

    //--- DATABASE MAPPING : isdeleted ( bool ) 
    public void setIsdeleted( Boolean isdeleted )
    {
        this.isdeleted = isdeleted;
    }
    public Boolean getIsdeleted()
    {
        return this.isdeleted;
    }

    //--- DATABASE MAPPING : systemmodstamp ( timestamp ) 
    public void setSystemmodstamp( Date systemmodstamp )
    {
        this.systemmodstamp = systemmodstamp;
    }
    public Date getSystemmodstamp()
    {
        return this.systemmodstamp;
    }

    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : model__c ( varchar ) 
    public void setModelC( String modelC )
    {
        this.modelC = modelC;
    }
    public String getModelC()
    {
        return this.modelC;
    }

    //--- DATABASE MAPPING : account_type__c ( varchar ) 
    public void setAccountTypeC( String accountTypeC )
    {
        this.accountTypeC = accountTypeC;
    }
    public String getAccountTypeC()
    {
        return this.accountTypeC;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : assign__c ( varchar ) 
    public void setAssignC( String assignC )
    {
        this.assignC = assignC;
    }
    public String getAssignC()
    {
        return this.assignC;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : make__c ( varchar ) 
    public void setMakeC( String makeC )
    {
        this.makeC = makeC;
    }
    public String getMakeC()
    {
        return this.makeC;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }

    //--- DATABASE MAPPING : liability_statement_date__c ( date ) 
    public void setLiabilityStatementDateC( Date liabilityStatementDateC )
    {
        this.liabilityStatementDateC = liabilityStatementDateC;
    }
    public Date getLiabilityStatementDateC()
    {
        return this.liabilityStatementDateC;
    }

    //--- DATABASE MAPPING : account_number__c ( varchar ) 
    public void setAccountNumberC( String accountNumberC )
    {
        this.accountNumberC = accountNumberC;
    }
    public String getAccountNumberC()
    {
        return this.accountNumberC;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(accountStatusC);
        sb.append("|");
        sb.append(isdeleted);
        sb.append("|");
        sb.append(systemmodstamp);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(modelC);
        sb.append("|");
        sb.append(accountTypeC);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(assignC);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(makeC);
        sb.append("|");
        sb.append(hcErr);
        sb.append("|");
        sb.append(liabilityStatementDateC);
        sb.append("|");
        sb.append(accountNumberC);
        return sb.toString(); 
    } 

}